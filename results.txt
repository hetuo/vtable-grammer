[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building vtable code generation 1.0
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ vtable ---
[INFO] 
[INFO] --- antlr4-maven-plugin:4.6:antlr4 (antlr) @ vtable ---
[INFO] ANTLR 4: Processing source directory /Users/parrt/grading/cs652/S17/vtable-grammar-hetuo/grammars
[INFO] Processing grammar: cs652/j/parser/J.g4
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ vtable ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 157 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ vtable ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 47 source files to /Users/parrt/grading/cs652/S17/vtable-grammar-hetuo/target/classes
[WARNING] /Users/parrt/grading/cs652/S17/vtable-grammar-hetuo/src/cs652/j/codegen/CodeGenerator.java:[45,18] sun.applet.Main is internal proprietary API and may be removed in a future release
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ vtable ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/parrt/grading/cs652/S17/vtable-grammar-hetuo/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ vtable ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 5 source files to /Users/parrt/grading/cs652/S17/vtable-grammar-hetuo/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ vtable ---
[INFO] Surefire report directory: /Users/parrt/grading/cs652/S17/vtable-grammar-hetuo/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running cs652.j.TestCGen
Working dir: /var/folders/93/9kzk2ccm8xj8k70059b28jk80000gp/T/junit8817049207408553934
foo
[this, x, y, local]
YEEEEEEEEEEEEEEEES
foo
[this, x, y, local]
YEEEEEEEEEEEEEEEES
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
foo
[this, x, y, local]
YEEEEEEEEEEEEEEEES
foo
[this, x, y, local]
YEEEEEEEEEEEEEEEES
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
main
[local]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
main
[local]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
main
[local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
main
[local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
foo
[this, local]
foo
[this, local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
foo
[this, local]
foo
[this, local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
speak
[this, local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
speak
[this, local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
bar
[this, x, q, local]
YEEEEEEEEEEEEEEEES
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
bar
[this, x, q, local]
YEEEEEEEEEEEEEEEES
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
main
[local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
main
[local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
speak
[this, local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
speak
[this, local]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template MethodDef between arguments and @ModelElement fields: [args, funcName, block, returnType]!=[returnType, args, block]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
mismatch in template PrintExpr between arguments and @ModelElement fields: [args]!=[args, types, d, returnType]
Tests run: 52, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.946 sec
Running cs652.j.TestExprTypes
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec
Running cs652.j.TestParser
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running cs652.j.TestSymbolDefs
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec

Results :

Tests run: 130, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4.801 s
[INFO] Finished at: 2017-04-12T10:21:45-07:00
[INFO] Final Memory: 24M/368M
[INFO] ------------------------------------------------------------------------
